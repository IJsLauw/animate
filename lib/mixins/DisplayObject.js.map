{"version":3,"sources":["../../src/mixins/DisplayObject.js"],"names":["p","PIXI","DisplayObject","prototype","ColorMatrixFilter","filters","setRenderable","re","renderable","t","setTransform","setMask","ma","mask","Graphics","Sprite","console","warn","setAlpha","a","alpha","setTint","i","tint","hexToUint","r","g","b","c","setColorTransform","rA","gA","bA","filter","colorTransformFilter","matrix","hasOwnProperty","Object","defineProperty","set","_colorTransformFilter","get","extend","e","child","create","__parent","constructor"],"mappings":"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","file":"DisplayObject.js","sourcesContent":["import utils from '../animate/utils';\n\n/**\n * Mixins for the PIXI.DisplayObject class.\n * @memberof PIXI\n * @class DisplayObject\n */\nconst p = PIXI.DisplayObject.prototype;\n\n// Color Matrix filter\nlet ColorMatrixFilter;\nif (PIXI.filters) {\n    ColorMatrixFilter = PIXI.filters.ColorMatrixFilter;\n}\n\n/**\n * Function to see if this is renderable or not. Useful for setting masks.\n * @method PIXI.DisplayObject#setRenderable\n * @param  {Boolean} [renderable=false] Make renderable\n * @return {PIXI.DisplayObject}\n */\n/**\n * Shortcut to `setRenderable`.\n * @method PIXI.DisplayObject#re\n * @param  {Boolean} [renderable=false] Make renderable\n * @return {PIXI.DisplayObject}\n */\np.setRenderable = p.re = function(renderable) {\n    this.renderable = !!renderable;\n    return this;\n};\n\n/**\n * Shortcut for `setTransform`.\n * @method PIXI.DisplayObject#tr\n * @param {Number} x The X position\n * @param {Number} y The Y position\n * @param {Number} scaleX The X Scale value\n * @param {Number} scaleY The Y Scale value\n * @param {Number} skewX The X skew value\n * @param {Number} skewY The Y skew value\n * @param {Number} pivotX The X pivot value\n * @param {Number} pivotY The Y pivot value\n * @return {PIXI.DisplayObject} Instance for chaining\n */\np.t = p.setTransform;\n\n/**\n * Setter for mask to be able to chain.\n * @method PIXI.DisplayObject#setMask\n * @param {PIXI.Graphics} mask The mask shape to use\n * @return {PIXI.DisplayObject} Instance for chaining\n */\n/**\n * Shortcut for `setMask`.\n * @method PIXI.DisplayObject#ma\n * @param {PIXI.Sprite|PIXI.Graphics} mask The mask shape to use\n * @return {PIXI.DisplayObject} Instance for chaining\n */\np.setMask = p.ma = function(mask) {\n    // According to PIXI, only Graphics and Sprites can \n    // be used as mask, let's ignore everything else, like other\n    // movieclips and displayobjects/containers\n    if (mask) {\n        if (!(mask instanceof PIXI.Graphics) && !(mask instanceof PIXI.Sprite)) {\n            if (typeof console !== \"undefined\" && console.warn) {\n                console.warn(\"Warning: Masks can only be PIXI.Graphics or PIXI.Sprite objects.\");\n            }\n            return this;\n        }\n    }\n    this.mask = mask;\n    return this;\n};\n\n/**\n * Setter for the alpha\n * @method PIXI.DisplayObject#setAlpha\n * @param {Number} alpha The alpha amount to use, from 0 to 1\n * @return {PIXI.DisplayObject} Instance for chaining\n */\n/**\n * Shortcut for `setAlpha`.\n * @method PIXI.DisplayObject#a\n * @param {Number} alpha The alpha amount to use, from 0 to 1\n * @return {PIXI.DisplayObject} Instance for chaining\n */\np.setAlpha = p.a = function(alpha) {\n    this.alpha = alpha;\n    return this;\n};\n\n/**\n * Set the tint values by color.\n * @method PIXI.DisplayObject#setTint\n * @param {int} tint The color value to tint\n * @return {PIXI.DisplayObject} Object for chaining\n */\n/**\n * Shortcut to `setTint`.\n * @method PIXI.DisplayObject#tn\n * @param {Number|String} tint The red percentage value\n * @return {PIXI.DisplayObject} Object for chaining\n */\np.setTint = p.i = function(tint) {\n    if (typeof tint === \"string\") {\n        tint = utils.hexToUint(tint);\n    }\n    // this.tint = tint\n    // return this;\n    // TODO: Replace with DisplayObject.tint setter\n    // once the functionality is added to Pixi.js, for\n    // now we'll use the slower ColorMatrixFilter to handle\n    // the color transformation\n    var r = tint >> 16 & 0xFF;\n    var g = tint >> 8 & 0xFF;\n    var b = tint & 0xFF;\n    return this.c(r / 255, 0, g / 255, 0, b / 255, 0);\n};\n\n/**\n * Set additive and multiply color, tinting\n * @method PIXI.DisplayObject#setColorTransform\n * @param {Number} r The multiply red value\n * @param {Number} rA The additive red value\n * @param {Number} g The multiply green value\n * @param {Number} gA The additive green value\n * @param {Number} b The multiply blue value\n * @param {Number} bA The additive blue value\n * @return {PIXI.DisplayObject} Object for chaining\n */\n/**\n * Shortcut to `setColor`.\n * @method PIXI.DisplayObject#c\n * @param {Number} r The multiply red value\n * @param {Number} rA The additive red value\n * @param {Number} g The multiply green value\n * @param {Number} gA The additive green value\n * @param {Number} b The multiply blue value\n * @param {Number} bA The additive blue value\n * @return {PIXI.DisplayObject} Object for chaining\n */\np.setColorTransform = p.c = function(r, rA, g, gA, b, bA) {\n    var filter = this.colorTransformFilter;\n    filter.matrix[0] = r;\n    filter.matrix[4] = rA;\n    filter.matrix[6] = g;\n    filter.matrix[9] = gA;\n    filter.matrix[12] = b;\n    filter.matrix[14] = bA;\n    this.filters = [filter];\n    return this;\n};\n\n/**\n * The current default color transforming filters\n * @name {PIXI.filters.ColorMatrixFilter} PIXI.DisplayObject#colorTransformFilter\n */\nif (!p.hasOwnProperty('colorTransformFilter')) {\n    Object.defineProperty(p, 'colorTransformFilter', {\n        set: function(filter) {\n            this._colorTransformFilter = filter;\n        },\n        get: function() {\n            return this._colorTransformFilter || new ColorMatrixFilter();\n        }\n    });\n}\n\n/**\n * Extend a container\n * @method PIXI.DisplayObject.extend\n * @static\n * @param {PIXI.DisplayObject} child The child function\n * @return {PIXI.DisplayObject} THe child\n */\n/**\n * Extend a container (shortcut for `extend`)\n * @method PIXI.DisplayObject.e\n * @static\n * @param {PIXI.DisplayObject} child The child function\n * @return {PIXI.DisplayObject} THe child\n */\nPIXI.DisplayObject.extend = PIXI.DisplayObject.e = function(child) {\n    child.prototype = Object.create(p);\n    child.prototype.__parent = p;\n    child.prototype.constructor = child;\n    return child;\n};"]}